basePath: /v1/api
definitions:
  request_dto.UserLoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request_dto.UserRegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  response_dto.userResponse:
    properties:
      email:
        type: string
      token:
        type: string
      username:
        type: string
    type: object
  utils.Error:
    properties:
      errors:
        additionalProperties: true
        type: object
    type: object
host: 127.0.0.1:8080
info:
  contact: {}
  description: Codebase sample API
  title: Codebase sample API
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login for existing user
      operationId: login
      parameters:
      - description: Credentials to use
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request_dto.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response_dto.userResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: Login for existing user
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Register a new user
      operationId: sign-up
      parameters:
      - description: User info for registration
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request_dto.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response_dto.userResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: Register a new user
      tags:
      - auth
  /users:
    get:
      consumes:
      - application/json
      description: Get the current logged-in user
      operationId: current-user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response_dto.userResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - ApiKeyAuth: []
      summary: Get the current user
      tags:
      - users
produces:
- application/json
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
